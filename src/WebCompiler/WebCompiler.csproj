<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\common.props" />
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFrameworks>netstandard20</TargetFrameworks>
    
    <Title>Web Compiler</Title>
    <PackageId>Drg.WebCompiler</PackageId>

    <BuildOutputTargetFolder>tools</BuildOutputTargetFolder>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <!-- forces SDK to copy dependencies into build output to make packing easier -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
    <Authors>Mads Kristensen, Data Research Group</Authors>
    <Copyright>Copyright 2024</Copyright>
    <RepositoryUrl>https://github.com/jehhynes/EssentialWebCompiler</RepositoryUrl>
    <Version>1.0.1</Version>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include="Node\prepare.cmd" />
    <EmbeddedResource Include="Node\node.7z" />
    <EmbeddedResource Include="Node\node_modules.7z" />
    <EmbeddedResource Include="Node\7z.dll" />
    <EmbeddedResource Include="Node\7z.exe" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="15.1.0-*" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.1.0-*" PrivateAssets="All" />
    <PackageReference Include="Newtonsoft.Json" Version="9.0.1" PrivateAssets="All" />
    <PackageReference Include="NUglify" Version="1.5.12" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="MSBuild\*.targets" PackagePath="build\" />
  </ItemGroup>
  <Target Name="PrepareNpmDependencies" AfterTargets="Restore">
    <Exec Command="..\..\build\build.cmd" />
  </Target>
    <!--<Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">
        --><!--
    The include needs to happen after output has been copied to build output folder
    but before NuGet generates a nuspec. See https://github.com/NuGet/Home/issues/4704.
    --><!--
        <ItemGroup>
            <_PackageFiles Include="bin\$(Configuration)\*\Newtonsoft.Json.dll;bin\$(Configuration)\*\NUglify.dll">
                <PackagePath>tools\%(RecursiveDir)</PackagePath>
                <Visible>false</Visible>
                <BuildAction>Content</BuildAction>
            </_PackageFiles>
        </ItemGroup>
    </Target>-->
  <!--<Import Project="..\..\packages\Fody.2.0.6\build\dotnet\Fody.targets" Condition="Exists('..\..\packages\Fody.2.0.6\build\dotnet\Fody.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\packages\Fody.2.0.6\build\dotnet\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Fody.2.0.6\build\dotnet\Fody.targets'))" />
    <Error Condition="!Exists('..\..\packages\Costura.Fody.1.5.1\build\dotnet\Costura.Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Costura.Fody.1.5.1\build\dotnet\Costura.Fody.targets'))" />
  </Target>
  <Import Project="..\..\packages\Costura.Fody.1.5.1\build\dotnet\Costura.Fody.targets" Condition="Exists('..\..\packages\Costura.Fody.1.5.1\build\dotnet\Costura.Fody.targets')" />-->
</Project>